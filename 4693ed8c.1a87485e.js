(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{142:function(e,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"b",(function(){return b}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var r=o.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},p=function(e){var r=u(e.components);return o.a.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},y=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),y=n,b=p["".concat(i,".").concat(y)]||p[y]||d[y]||a;return t?o.a.createElement(b,c(c({ref:r},l),{},{components:t})):o.a.createElement(b,c({ref:r},l))}));function b(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,i=new Array(a);i[0]=y;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},89:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return s})),t.d(r,"default",(function(){return u}));var n=t(3),o=t(7),a=(t(0),t(142)),i={id:"sentry",title:"Error Reporting with Sentry.io",sidebar_label:"Sentry.io"},c={unversionedId:"sentry",id:"sentry",isDocsHomePage:!1,title:"Error Reporting with Sentry.io",description:"NodeCG v0.9 adds support for Sentry.io, a service for tracking errors.",source:"@site/docs/sentry.md",slug:"/sentry",permalink:"/docs/sentry",editUrl:"https://github.com/nodecg/docs/edit/master/docs/sentry.md",version:"current",lastUpdatedBy:"Ewan Lyon",lastUpdatedAt:1610153791,sidebar_label:"Sentry.io",sidebar:"mainSidebar",previous:{title:"Custom Routes",permalink:"/docs/custom-routes"},next:{title:"Using Bundlers",permalink:"/docs/frameworks/using-bundlers"}},s=[],l={rightToc:s};function u(e){var r=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,"NodeCG v0.9 adds support for ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://sentry.io/"}),"Sentry.io"),", a service for tracking errors.\nSentry is especially useful for developers whom manage multiple NodeCG instances and need to be informed\nof both server-side and client-side errors as they happen."),Object(a.b)("p",null,"To add Sentry to your NodeCG instance, you'll first need to create a Sentry account and a Sentry project.\nThen, add the following to your instance's ",Object(a.b)("inlineCode",{parentName:"p"},"cfg/nodecg.json"),":"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "sentry": {\n    "enabled": true,\n    "dsn": "your project\'s DSN, used to report server-side errors",\n    "publicDsn": "your project\'s public DSN, used to report client-side errors"\n  }\n}\n')),Object(a.b)("p",null,"Once Sentry is configured, any uncaught exceptions or unhandled promise rejections either on the server or on the client will be reported automatically."),Object(a.b)("p",null,"In addition, any use of ",Object(a.b)("inlineCode",{parentName:"p"},"nodecg.log.error")," will also be reported to Sentry."))}u.isMDXComponent=!0}}]);